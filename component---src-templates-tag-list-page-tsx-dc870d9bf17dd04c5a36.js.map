{"version":3,"file":"component---src-templates-tag-list-page-tsx-dc870d9bf17dd04c5a36.js","mappings":"mMAuDA,MAlCA,SAAgBA,GAAmC,IAAlC,SAAEC,EAAW,IAAkBD,EAC9C,MACME,GCpBOC,EAAAA,EAAAA,gBAAe,cAYhBC,ODQMC,MAElB,OACEC,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,MAAIC,UAAU,kBACZD,EAAAA,cAAA,QAAMC,UAAU,cACdD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAWH,UAAU,gBACvC,UAGTD,EAAAA,cAAA,OAAKC,UAAU,eAAc,KAAGL,EAAKS,OAAO,UAG9CL,EAAAA,cAAA,OAAKC,UAAU,sBACZL,EAAKU,KAAKC,GACTP,EAAAA,cAACQ,EAAAA,KAAI,CACHC,IAAKF,EAAIG,WACTC,GAAI,SAASJ,EAAIG,aACjBT,UAAW,aAAYN,IAAaY,EAAIG,WAAa,SAAW,KAEhEV,EAAAA,cAAA,QAAMC,UAAU,YAAYW,EAAAA,EAASL,EAAIG,aAAeH,EAAIG,YAC5DV,EAAAA,cAAA,QAAMC,UAAU,aAAY,IAAEM,EAAIM,WAAW,SAKnDb,EAAAA,cAAA,OAAKC,UAAU,qBAGrB,C,qBErCA,IAhByC,CACvCa,OAAQ,SACRC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,KAAM,MACNC,IAAK,MACL,eAAgB,eAChBC,SAAU,SACV,eAAgB,cAChB,gBAAiB,mBACjBC,KAAM,OACNC,MAAO,MACPC,SAAU,SACVC,IAAK,M,mGCJQ,SAASC,EAAU/B,GAA6B,IAA5B,KAAEgC,GAAuBhC,EAC1D,OAAKgC,GAAwB,IAAhBA,EAAKrB,OAGhBL,EAAAA,cAAA,OAAK,aAAW,aAAaC,UAAU,cACrCD,EAAAA,cAAA,MAAIC,UAAU,mBACXyB,EAAKpB,KAAI,CAACqB,EAAMC,KACf,MAAMC,EAASD,IAAQF,EAAKrB,OAAS,EACrC,OACEL,EAAAA,cAAA,MAAIS,IAAKkB,EAAKG,KAAO,GAAGH,EAAKI,QAAQH,IAAO3B,UAAU,mBACnD4B,EACC7B,EAAAA,cAAA,QAAM,eAAa,OAAOC,UAAU,sBACjC0B,EAAKI,MAGR/B,EAAAA,cAACQ,EAAAA,KAAI,CAACG,GAAIgB,EAAKG,IAAK7B,UAAU,mBAC3B0B,EAAKI,OAGRF,GACA7B,EAAAA,cAAA,QAAMC,UAAU,kBACdD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAM6B,EAAAA,IAAc/B,UAAU,yBAGhD,MAvBwB,IA6BzC,C,yICHO,SAASgC,IACd,OAAOjC,EAAAA,cAACkC,EAAAA,EAAG,CAACC,MAAM,SACpB,CAEA,UAzBA,SAAoBzC,GAAwD,IAAvD,YAAE0C,GAAmD1C,EACxE,OACEM,EAAAA,cAACqC,EAAAA,EAAM,KACLrC,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAACsC,EAAAA,EAAO,MACRtC,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAACyB,EAAAA,EAAU,CAACC,KAAMU,EAAYG,eAEhCvC,EAAAA,cAAA,MAAIC,UAAU,qBACZD,EAAAA,cAAA,QAAMC,UAAU,cACdD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAWH,UAAU,gBACvC,gBAOnB,C","sources":["webpack://aaxx98-blog/./src/components/search/tag-list.tsx","webpack://aaxx98-blog/./src/hooks/useTagData.ts","webpack://aaxx98-blog/./src/code/tagName.ts","webpack://aaxx98-blog/./src/components/breadcrumb.tsx","webpack://aaxx98-blog/./src/templates/tag-list-page.tsx"],"sourcesContent":["import React from 'react';\n\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\nimport tagNames from '../../code/tagName';\nimport { useTagData } from '../../hooks/useTagData';\n\ntype TagListProps = {\n  selected?: string;\n};\n\ntype TagType = {\n  totalCount: number;\n  group: {\n    fieldValue: string;\n    totalCount: number;\n  }[];\n};\n\nfunction TagList({ selected = '' }: TagListProps) {\n  const data: TagType = useTagData();\n  const tags = data.group;\n\n  return (\n    <div className=\"tag-list-container\">\n      <div className=\"tag-list-header\">\n        <h1 className=\"tag-list-title\">\n          <span className=\"title-icon\">\n            <FontAwesomeIcon icon={faHashtag} className=\"title-icon\" />\n          </span>\n          태그로 검색\n        </h1>\n        <div className=\"total-count\">총 {tags.length}개의 태그</div>\n      </div>\n\n      <div className=\"tag-flex-container\">\n        {tags.map((tag: any) => (\n          <Link\n            key={tag.fieldValue}\n            to={`/tags/${tag.fieldValue}`}\n            className={`tag-item ${selected === tag.fieldValue ? 'active' : ''}`}\n          >\n            <span className=\"tag-name\">{tagNames[tag.fieldValue] || tag.fieldValue}</span>\n            <span className=\"tag-count\">({tag.totalCount})</span>\n          </Link>\n        ))}\n      </div>\n\n      <div className=\"tag-list-divider\" />\n    </div>\n  );\n}\n\nexport default TagList;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useTagData = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        totalCount\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return data.allMdx;\n};\n","const tagNames: Record<string, string> = {\n  gatsby: 'Gatsby',\n  react: 'React',\n  utterances: 'Utterances',\n  github: 'Github',\n  blog: '블로그',\n  seo: 'SEO',\n  'tailwind-css': 'Tailwind CSS',\n  bootcamp: '부트캠프후기',\n  'multi-campus': '멀티캠퍼스IT부트캠프',\n  'ureca-backend': 'LG U+ 유레카 3기 백엔드',\n  java: 'JAVA',\n  study: '스터디',\n  database: '데이터베이스',\n  sql: 'SQL',\n};\nexport default tagNames;\n","import * as React from 'react';\n\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\ntype BreadcrumbProps = {\n  info: { name: string; url: string }[];\n};\n\nexport default function Breadcrumb({ info }: BreadcrumbProps) {\n  if (!info || info.length === 0) return null;\n\n  return (\n    <nav aria-label=\"breadcrumb\" className=\"breadcrumb\">\n      <ol className=\"breadcrumb-list\">\n        {info.map((item, idx) => {\n          const isLast = idx === info.length - 1;\n          return (\n            <li key={item.url || `${item.name}-${idx}`} className=\"breadcrumb-item\">\n              {isLast ? (\n                <span aria-current=\"page\" className=\"breadcrumb-current\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link to={item.url} className=\"breadcrumb-link\">\n                  {item.name}\n                </Link>\n              )}\n              {!isLast && (\n                <span className=\"breadcrumb-sep\">\n                  <FontAwesomeIcon icon={faAngleRight} className=\"breadcrumb-sep-icon\" />\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n","import React from 'react';\n\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PageProps } from 'gatsby';\n\nimport Breadcrumb from '../components/breadcrumb';\nimport Layout from '../components/layout';\nimport TagList from '../components/search/tag-list';\nimport Seo from '../components/seo';\nimport { BreadcrumbItem } from '../types/breadcrumb';\n\ntype PageContextProps = {\n  breadCrumbs: BreadcrumbItem[];\n};\n\nfunction TagListPage({ pageContext }: PageProps<unknown, PageContextProps>) {\n  return (\n    <Layout>\n      <div className=\"tag-page-container\">\n        <TagList />\n        <div className=\"tag-page-below\">\n          <div className=\"breadcrumb-wrap\">\n            <Breadcrumb info={pageContext.breadCrumbs} />\n          </div>\n          <h2 className=\"tag-page-subtitle\">\n            <span className=\"title-icon\">\n              <FontAwesomeIcon icon={faHashtag} className=\"title-icon\" />\n            </span>\n            태그를 선택하세요.\n          </h2>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport function Head() {\n  return <Seo title=\"태그 목록\" />;\n}\n\nexport default TagListPage;\n"],"names":["_ref","selected","tags","useStaticQuery","allMdx","group","React","className","FontAwesomeIcon","icon","faHashtag","length","map","tag","Link","key","fieldValue","to","tagNames","totalCount","gatsby","react","utterances","github","blog","seo","bootcamp","java","study","database","sql","Breadcrumb","info","item","idx","isLast","url","name","faAngleRight","Head","Seo","title","pageContext","Layout","TagList","breadCrumbs"],"sourceRoot":""}