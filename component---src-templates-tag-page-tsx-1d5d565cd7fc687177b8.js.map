{"version":3,"file":"component---src-templates-tag-page-tsx-1d5d565cd7fc687177b8.js","mappings":"mMAuDA,MAlCA,SAAgBA,GAAmC,IAAlC,SAAEC,EAAW,IAAkBD,EAC9C,MACME,GCpBOC,EAAAA,EAAAA,gBAAe,cAYhBC,ODQMC,MAElB,OACEC,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,MAAIC,UAAU,kBACZD,EAAAA,cAAA,QAAMC,UAAU,cACdD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAWH,UAAU,gBACvC,UAGTD,EAAAA,cAAA,OAAKC,UAAU,eAAc,KAAGL,EAAKS,OAAO,UAG9CL,EAAAA,cAAA,OAAKC,UAAU,sBACZL,EAAKU,KAAKC,GACTP,EAAAA,cAACQ,EAAAA,KAAI,CACHC,IAAKF,EAAIG,WACTC,GAAI,SAASJ,EAAIG,aACjBT,UAAW,aAAYN,IAAaY,EAAIG,WAAa,SAAW,KAEhEV,EAAAA,cAAA,QAAMC,UAAU,YAAYW,EAAAA,EAASL,EAAIG,aAAeH,EAAIG,YAC5DV,EAAAA,cAAA,QAAMC,UAAU,aAAY,IAAEM,EAAIM,WAAW,SAKnDb,EAAAA,cAAA,OAAKC,UAAU,qBAGrB,C,kJEgDO,SAASa,EAAIC,GAAmD,IAAlD,YAAEC,GAA8CD,EACnE,OAAOf,EAAAA,cAACiB,EAAAA,EAAG,CAACC,MAAO,GAAGF,EAAYT,IAAIY,cACxC,CAEA,UAnEA,SAAgBzB,GAAgE,IAA/D,KAAE0B,EAAI,YAAEJ,GAAqDtB,EAC5E,MAAM,IAAEa,GAAQS,EACVK,EAAQD,EAAKtB,OAAOwB,MAE1B,OACEtB,EAAAA,cAACuB,EAAAA,EAAM,KACLvB,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAACwB,EAAAA,EAAO,CAAC7B,SAAUY,EAAIY,OACvBnB,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAACyB,EAAAA,EAAU,CAACC,KAAMV,EAAYW,eAEhC3B,EAAAA,cAAA,MAAIC,UAAU,qBACZD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAWH,UAAU,eAC3CM,EAAIY,KAAK,OAAKZ,EAAIqB,MAAM,QAE3B5B,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAU,aACXoB,EAAMf,KAAI,CAACuB,EAAWC,IACrB9B,EAAAA,cAAA,MAAIS,IAAKqB,GACP9B,EAAAA,cAAC+B,EAAAA,EAAaF,UAShC,C,mGCzDe,SAASJ,EAAU/B,GAA6B,IAA5B,KAAEgC,GAAuBhC,EAC1D,OAAKgC,GAAwB,IAAhBA,EAAKrB,OAGhBL,EAAAA,cAAA,OAAK,aAAW,aAAaC,UAAU,cACrCD,EAAAA,cAAA,MAAIC,UAAU,mBACXyB,EAAKpB,KAAI,CAAC0B,EAAMC,KACf,MAAMC,EAASD,IAAQP,EAAKrB,OAAS,EACrC,OACEL,EAAAA,cAAA,MAAIS,IAAKuB,EAAKG,KAAO,GAAGH,EAAKb,QAAQc,IAAOhC,UAAU,mBACnDiC,EACClC,EAAAA,cAAA,QAAM,eAAa,OAAOC,UAAU,sBACjC+B,EAAKb,MAGRnB,EAAAA,cAACQ,EAAAA,KAAI,CAACG,GAAIqB,EAAKG,IAAKlC,UAAU,mBAC3B+B,EAAKb,OAGRe,GACAlC,EAAAA,cAAA,QAAMC,UAAU,kBACdD,EAAAA,cAACE,EAAAA,EAAe,CAACC,KAAMiC,EAAAA,IAAcnC,UAAU,yBAGhD,MAvBwB,IA6BzC,C","sources":["webpack://aaxx98-blog/./src/components/search/tag-list.tsx","webpack://aaxx98-blog/./src/hooks/useTagData.ts","webpack://aaxx98-blog/./src/templates/tag-page.tsx","webpack://aaxx98-blog/./src/components/breadcrumb.tsx"],"sourcesContent":["import React from 'react';\n\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\nimport tagNames from '../../code/tagName';\nimport { useTagData } from '../../hooks/useTagData';\n\ntype TagListProps = {\n  selected?: string;\n};\n\ntype TagType = {\n  totalCount: number;\n  group: {\n    fieldValue: string;\n    totalCount: number;\n  }[];\n};\n\nfunction TagList({ selected = '' }: TagListProps) {\n  const data: TagType = useTagData();\n  const tags = data.group;\n\n  return (\n    <div className=\"tag-list-container\">\n      <div className=\"tag-list-header\">\n        <h1 className=\"tag-list-title\">\n          <span className=\"title-icon\">\n            <FontAwesomeIcon icon={faHashtag} className=\"title-icon\" />\n          </span>\n          태그로 검색\n        </h1>\n        <div className=\"total-count\">총 {tags.length}개의 태그</div>\n      </div>\n\n      <div className=\"tag-flex-container\">\n        {tags.map((tag: any) => (\n          <Link\n            key={tag.fieldValue}\n            to={`/tags/${tag.fieldValue}`}\n            className={`tag-item ${selected === tag.fieldValue ? 'active' : ''}`}\n          >\n            <span className=\"tag-name\">{tagNames[tag.fieldValue] || tag.fieldValue}</span>\n            <span className=\"tag-count\">({tag.totalCount})</span>\n          </Link>\n        ))}\n      </div>\n\n      <div className=\"tag-list-divider\" />\n    </div>\n  );\n}\n\nexport default TagList;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useTagData = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        totalCount\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return data.allMdx;\n};\n","import React from 'react';\n\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { graphql, PageProps } from 'gatsby';\n\nimport Breadcrumb from '../components/breadcrumb';\nimport Layout from '../components/layout';\nimport PostItem from '../components/post/post-item';\nimport TagList from '../components/search/tag-list';\nimport Seo from '../components/seo';\nimport { BreadcrumbItem } from '../types/breadcrumb';\n\ntype Post = {\n  id: string;\n  frontmatter: {\n    title: string;\n    slug: string;\n    date: string;\n  };\n  excerpt: string;\n};\n\ntype DataProps = {\n  allMdx: {\n    nodes: Post[];\n  };\n};\n\ntype PageContextProps = {\n  breadCrumbs: BreadcrumbItem[];\n  tag: {\n    name: string;\n    count: number;\n  };\n  tagName: string;\n};\n\nfunction TagPage({ data, pageContext }: PageProps<DataProps, PageContextProps>) {\n  const { tag } = pageContext;\n  const posts = data.allMdx.nodes;\n\n  return (\n    <Layout>\n      <div className=\"tag-page-container\">\n        <TagList selected={tag.name} />\n        <div className=\"tag-page-below\">\n          <div className=\"breadcrumb-wrap\">\n            <Breadcrumb info={pageContext.breadCrumbs} />\n          </div>\n          <h2 className=\"tag-page-subtitle\">\n            <FontAwesomeIcon icon={faHashtag} className=\"title-icon\" />\n            {tag.name} :: {tag.count}건의 글\n          </h2>\n          <div>\n            <ul className=\"post-list\">\n              {posts.map((node: any, index: number) => (\n                <li key={index}>\n                  <PostItem {...node} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($tagName: [String]) {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: $tagName } } }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          slug\n          date(formatString: \"YYYY년 M월 D일\")\n          tags\n          category\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(\n                layout: CONSTRAINED\n                width: 800\n                height: 600\n                placeholder: BLURRED\n                transformOptions: { fit: COVER, cropFocus: CENTER }\n              )\n            }\n          }\n        }\n        excerpt\n      }\n    }\n  }\n`;\n\nexport function Head({ pageContext }: PageProps<{}, PageContextProps>) {\n  return <Seo title={`${pageContext.tag.name} 태그한 글`} />;\n}\n\nexport default TagPage;\n","import * as React from 'react';\n\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\ntype BreadcrumbProps = {\n  info: { name: string; url: string }[];\n};\n\nexport default function Breadcrumb({ info }: BreadcrumbProps) {\n  if (!info || info.length === 0) return null;\n\n  return (\n    <nav aria-label=\"breadcrumb\" className=\"breadcrumb\">\n      <ol className=\"breadcrumb-list\">\n        {info.map((item, idx) => {\n          const isLast = idx === info.length - 1;\n          return (\n            <li key={item.url || `${item.name}-${idx}`} className=\"breadcrumb-item\">\n              {isLast ? (\n                <span aria-current=\"page\" className=\"breadcrumb-current\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link to={item.url} className=\"breadcrumb-link\">\n                  {item.name}\n                </Link>\n              )}\n              {!isLast && (\n                <span className=\"breadcrumb-sep\">\n                  <FontAwesomeIcon icon={faAngleRight} className=\"breadcrumb-sep-icon\" />\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n"],"names":["_ref","selected","tags","useStaticQuery","allMdx","group","React","className","FontAwesomeIcon","icon","faHashtag","length","map","tag","Link","key","fieldValue","to","tagNames","totalCount","Head","_ref2","pageContext","Seo","title","name","data","posts","nodes","Layout","TagList","Breadcrumb","info","breadCrumbs","count","node","index","PostItem","item","idx","isLast","url","faAngleRight"],"sourceRoot":""}