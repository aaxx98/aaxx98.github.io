{"version":3,"file":"component---src-pages-index-tsx-16c60b72df92b49b51b9.js","mappings":"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","sources":["webpack://aaxx98-blog/./src/components/seo.tsx","webpack://aaxx98-blog/./src/components/post/post-item.tsx","webpack://aaxx98-blog/./src/components/post/post-list.tsx","webpack://aaxx98-blog/./src/hooks/usePostData.ts","webpack://aaxx98-blog/./src/pages/index.tsx","webpack://aaxx98-blog/./src/components/header.tsx","webpack://aaxx98-blog/./src/hooks/useSiteMetaData.ts","webpack://aaxx98-blog/./src/components/mdx-components.tsx","webpack://aaxx98-blog/./src/components/layout.tsx","webpack://aaxx98-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ntype SeoProps = {\n  title: string;\n};\nconst Seo = ({ title }: SeoProps) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return title == \"\" ? (\n    <title> {data.site.siteMetadata.title}</title>\n  ) : (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype PostItemProps = {\n  id: string;\n  excerpt: string;\n  frontmatter: {\n    title: string;\n    date: string;\n    slug: string;\n  };\n};\n\nconst PostItem = ({ id, frontmatter, excerpt }: PostItemProps) => {\n  return (\n    <article key={id}>\n      <Link to={`/post/${frontmatter.slug}`}>\n        <div className=\"p-6 rounded-lg shadow-md bg-white hover:bg-blue-50 hover:shadow-lg transition-shadow duration-300\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\n            {frontmatter.title}\n          </h2>\n          <hr className=\"mt-6 mb-4 border-t border-gray-200\" />\n          <p className=\"text-sm text-gray-500 mb-1 text-right\">\n            작성일: {frontmatter.date}\n          </p>\n          <p className=\"text-sm text-blue-500 mb-3 text-right\">\n            @{frontmatter.slug}\n          </p>\n          <p className=\"text-gray-700 leading-relaxed\">{excerpt}</p>\n        </div>\n      </Link>\n    </article>\n  );\n};\n\nexport default PostItem;\n","import * as React from \"react\";\nimport { usePostdata } from \"../../hooks/usePostData\";\nimport PostItem from \"./post-item\";\n\nconst PostList = () => {\n  const data = usePostdata();\n  const count = data.allMdx.totalCount;\n  const nodes = data.allMdx.nodes;\n\n  return (\n    <div className=\"m-8\">\n      <div className=\"text-xl font-semibold mb-6 text-gray-800\">\n        {count}건의 포스트\n      </div>\n      <hr className=\"mb-6 border-t border-gray-300\" />\n      <div className=\"space-y-8\">\n        <ul className=\"space-y-8\">\n          {nodes.map((node: any, index: number) => (\n            <li key={index}>\n              <PostItem {...node} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const usePostdata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(sort: { frontmatter: { date: DESC } }) {\n        totalCount\n        nodes {\n          id\n          excerpt\n          body\n          frontmatter {\n            date(formatString: \"YYYY년 M월 D일\")\n            slug\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  return data;\n};\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport PostList from \"../components/post/post-list\";\nimport Seo from \"../components/seo\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return <Layout children={<PostList />} />;\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <Seo title=\"\" />;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetaData\";\n\nconst Header = () => {\n  const { title } = useSiteMetadata();\n\n  return (\n    <header className=\"bg-white shadow-md sticky top-0 z-50\">\n      <div className=\"max-w-5xl mx-auto px-4 py-3 flex justify-between items-center\">\n        <Link to=\"/\" className=\"text-2xl font-bold text-gray-800\">\n          {title}\n        </Link>\n\n        <nav className=\"space-x-4 text-sm text-gray-600\">\n          <Link to=\"/categories\" className=\"hover:text-black\">\n            카테고리\n          </Link>\n          <Link to=\"/tags\" className=\"hover:text-black\">\n            태그\n          </Link>\n          <Link to=\"/about\" className=\"hover:text-black\">\n            소개\n          </Link>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\n\nexport const mdxComponents = {\n  h1: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLHeadingElement> &\n      React.HTMLAttributes<HTMLHeadingElement>\n  ) => <h1 className=\"text-3xl font-bold my-4\" {...props} />,\n  h2: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLHeadingElement> &\n      React.HTMLAttributes<HTMLHeadingElement>\n  ) => <h2 className=\"text-2xl font-semibold my-3\" {...props} />,\n  p: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLParagraphElement> &\n      React.HTMLAttributes<HTMLParagraphElement>\n  ) => <p className=\"text-gray-700 leading-7 my-2\" {...props} />,\n  ul: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLUListElement> &\n      React.HTMLAttributes<HTMLUListElement>\n  ) => <ul className=\"list-disc pl-6 my-2\" {...props} />,\n  li: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLLIElement> &\n      React.LiHTMLAttributes<HTMLLIElement>\n  ) => <li className=\"mb-1\" {...props} />,\n  a: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLAnchorElement> &\n      React.AnchorHTMLAttributes<HTMLAnchorElement>\n  ) => <a className=\"text-blue-600 underline\" {...props} />,\n};\n","import React, { ReactNode } from \"react\";\nimport Header from \"./header\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { mdxComponents } from \"./mdx-components\";\n\ntype LayoutProps = {\n  children: ReactNode;\n};\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div>\n      <Header />\n      <MDXProvider components={mdxComponents}>\n        <main>{children}</main>\n      </MDXProvider>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_ref","title","data","useStaticQuery","React","site","siteMetadata","id","frontmatter","excerpt","key","Link","to","slug","className","date","PostList","count","allMdx","totalCount","nodes","map","node","index","PostItem","IndexPage","Layout","children","Head","Seo","Header","mdxComponents","h1","props","Object","assign","h2","p","ul","li","a","MDXProvider","components","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}