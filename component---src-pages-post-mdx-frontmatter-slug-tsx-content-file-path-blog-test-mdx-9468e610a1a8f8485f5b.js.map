{"version":3,"file":"component---src-pages-post-mdx-frontmatter-slug-tsx-content-file-path-blog-test-mdx-9468e610a1a8f8485f5b.js","mappings":"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","sources":["webpack://aaxx98-blog/./src/components/seo.tsx","webpack://aaxx98-blog/./blog/test.mdx","webpack://aaxx98-blog/./src/pages/post/{mdx.frontmatter__slug}.tsx","webpack://aaxx98-blog/./src/components/post/post-content.tsx","webpack://aaxx98-blog/./src/components/header.tsx","webpack://aaxx98-blog/./src/hooks/useSiteMetaData.ts","webpack://aaxx98-blog/./src/components/mdx-components.tsx","webpack://aaxx98-blog/./src/components/layout.tsx","webpack://aaxx98-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ntype SeoProps = {\n  title: string;\n};\nconst Seo = ({ title }: SeoProps) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return title == \"\" ? (\n    <title> {data.site.siteMetadata.title}</title>\n  ) : (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\\nThis is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\\nThis is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\\nThis is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\\nThis is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/hyejin/Documents/aaxx98/aaxx98.github.io/blog/test.mdx\";\nimport * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport PostContent from \"../../components/post/post-content\";\nimport Seo from \"../../components/seo\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"m-12\"\n  }, React.createElement(PostContent, {\n    data: data\n  }), children));\n};\nconst query = \"56583545\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\";\n\nconst PostContent = ({ data }: any) => {\n  return (\n    <div className=\"m-8\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\n        {data.mdx.frontmatter.title}\n      </h2>\n      <p className=\"text-sm text-gray-500 mb-1 text-right\">\n        {data.mdx.frontmatter.date}\n      </p>\n    </div>\n  );\n};\n\nexport default PostContent;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetaData\";\n\nconst Header = () => {\n  const { title } = useSiteMetadata();\n\n  return (\n    <header className=\"bg-white shadow-md sticky top-0 z-50\">\n      <div className=\"max-w-5xl mx-auto px-4 py-3 flex justify-between items-center\">\n        <Link to=\"/\" className=\"text-2xl font-bold text-gray-800\">\n          {title}\n        </Link>\n\n        <nav className=\"space-x-4 text-sm text-gray-600\">\n          <Link to=\"/categories\" className=\"hover:text-black\">\n            카테고리\n          </Link>\n          <Link to=\"/tags\" className=\"hover:text-black\">\n            태그\n          </Link>\n          <Link to=\"/about\" className=\"hover:text-black\">\n            소개\n          </Link>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\n\nexport const mdxComponents = {\n  h1: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLHeadingElement> &\n      React.HTMLAttributes<HTMLHeadingElement>\n  ) => <h1 className=\"text-3xl font-bold my-4\" {...props} />,\n  h2: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLHeadingElement> &\n      React.HTMLAttributes<HTMLHeadingElement>\n  ) => <h2 className=\"text-2xl font-semibold my-3\" {...props} />,\n  p: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLParagraphElement> &\n      React.HTMLAttributes<HTMLParagraphElement>\n  ) => <p className=\"text-gray-700 leading-7 my-2\" {...props} />,\n  ul: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLUListElement> &\n      React.HTMLAttributes<HTMLUListElement>\n  ) => <ul className=\"list-disc pl-6 my-2\" {...props} />,\n  li: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLLIElement> &\n      React.LiHTMLAttributes<HTMLLIElement>\n  ) => <li className=\"mb-1\" {...props} />,\n  a: (\n    props: React.JSX.IntrinsicAttributes &\n      React.ClassAttributes<HTMLAnchorElement> &\n      React.AnchorHTMLAttributes<HTMLAnchorElement>\n  ) => <a className=\"text-blue-600 underline\" {...props} />,\n};\n","import React, { ReactNode } from \"react\";\nimport Header from \"./header\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { mdxComponents } from \"./mdx-components\";\n\ntype LayoutProps = {\n  children: ReactNode;\n};\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div>\n      <Header />\n      <MDXProvider components={mdxComponents}>\n        <main>{children}</main>\n      </MDXProvider>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_ref","title","data","useStaticQuery","React","site","siteMetadata","_createMdxContent","props","_components","Object","assign","p","em","strong","ul","li","_provideComponents","components","wrapper","MDXLayout","BlogPost","children","Layout","className","PostContent","Head","_ref2","Seo","mdx","frontmatter","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","date","Header","Link","to","mdxComponents","h1","h2","a","MDXProvider","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}