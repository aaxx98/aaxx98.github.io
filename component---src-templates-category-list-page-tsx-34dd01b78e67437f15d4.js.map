{"version":3,"file":"component---src-templates-category-list-page-tsx-34dd01b78e67437f15d4.js","mappings":"mOAmCO,SAASA,IACd,OAAOC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,YACpB,CAEA,UAvBA,SAAyBC,GAAwD,IAAvD,YAAEC,GAAmDD,EAC7E,OACEH,EAAAA,cAACK,EAAAA,EAAM,KACLL,EAAAA,cAAA,OAAKM,UAAU,sBACbN,EAAAA,cAACO,EAAAA,EAAY,MACbP,EAAAA,cAAA,OAAKM,UAAU,kBACbN,EAAAA,cAAA,OAAKM,UAAU,mBACbN,EAAAA,cAACQ,EAAAA,EAAU,CAACC,KAAML,EAAYM,eAEhCV,EAAAA,cAAA,MAAIM,UAAU,0BACZN,EAAAA,cAACW,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAQP,UAAU,eAAe,iBAOpE,C,6GCoBA,MAhCA,SAAqBH,GAAmC,IAAlC,SAAEW,GAA6BX,EACnD,MACMY,GCpBOC,EAAAA,EAAAA,gBAAe,aAYhBC,ODQYC,MAExB,OACElB,EAAAA,cAAA,OAAKM,UAAU,2BACbN,EAAAA,cAAA,OAAKM,UAAU,mBACbN,EAAAA,cAAA,MAAIM,UAAU,uBACZN,EAAAA,cAACW,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAQP,UAAU,eAAe,WAG1DN,EAAAA,cAAA,OAAKM,UAAU,eAAc,KAAGS,EAAWI,OAAO,WAEpDnB,EAAAA,cAAA,OAAKM,UAAU,iBACZS,EAAWK,KAAKC,GACfrB,EAAAA,cAACsB,EAAAA,KAAI,CACHC,IAAKF,EAASG,WACdC,GAAI,eAAeJ,EAASG,aAC5BlB,UAAW,kBAAiBQ,IAAaO,EAASG,WAAa,SAAW,KAE1ExB,EAAAA,cAAA,OAAKM,UAAU,iBACZoB,EAAAA,EAAcL,EAASG,aAAeH,EAASG,YAElDxB,EAAAA,cAAA,OAAKM,UAAU,kBAAkBe,EAASM,WAAW,YAI3D3B,EAAAA,cAAA,OAAKM,UAAU,0BAGrB,C,qBE9CA,IAL8C,CAC5CsB,KAAM,aACN,mBAAoB,SACpB,gBAAiB,gB,mGCOJ,SAASpB,EAAUL,GAA6B,IAA5B,KAAEM,GAAuBN,EAC1D,OAAKM,GAAwB,IAAhBA,EAAKU,OAGhBnB,EAAAA,cAAA,OAAK,aAAW,aAAaM,UAAU,cACrCN,EAAAA,cAAA,MAAIM,UAAU,mBACXG,EAAKW,KAAI,CAACS,EAAMC,KACf,MAAMC,EAASD,IAAQrB,EAAKU,OAAS,EACrC,OACEnB,EAAAA,cAAA,MAAIuB,IAAKM,EAAKG,KAAO,GAAGH,EAAKI,QAAQH,IAAOxB,UAAU,mBACnDyB,EACC/B,EAAAA,cAAA,QAAM,eAAa,OAAOM,UAAU,sBACjCuB,EAAKI,MAGRjC,EAAAA,cAACsB,EAAAA,KAAI,CAACG,GAAII,EAAKG,IAAK1B,UAAU,mBAC3BuB,EAAKI,OAGRF,GACA/B,EAAAA,cAAA,QAAMM,UAAU,kBACdN,EAAAA,cAACW,EAAAA,EAAe,CAACC,KAAMsB,EAAAA,IAAc5B,UAAU,yBAGhD,MAvBwB,IA6BzC,C","sources":["webpack://aaxx98-blog/./src/templates/category-list-page.tsx","webpack://aaxx98-blog/./src/components/search/category-list.tsx","webpack://aaxx98-blog/./src/hooks/useCategoryData.ts","webpack://aaxx98-blog/./src/code/categoryName.ts","webpack://aaxx98-blog/./src/components/breadcrumb.tsx"],"sourcesContent":["import React from 'react';\n\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PageProps } from 'gatsby';\n\nimport Breadcrumb from '../components/breadcrumb';\nimport Layout from '../components/layout';\nimport CategoryList from '../components/search/category-list';\nimport Seo from '../components/seo';\nimport { BreadcrumbItem } from '../types/breadcrumb';\n\ntype PageContextProps = {\n  breadCrumbs: BreadcrumbItem[];\n};\n\nfunction CategoryListPage({ pageContext }: PageProps<unknown, PageContextProps>) {\n  return (\n    <Layout>\n      <div className=\"tag-page-container\">\n        <CategoryList />\n        <div className=\"tag-page-below\">\n          <div className=\"breadcrumb-wrap\">\n            <Breadcrumb info={pageContext.breadCrumbs} />\n          </div>\n          <h2 className=\"category-page-subtitle\">\n            <FontAwesomeIcon icon={faBook} className=\"title-icon\" />\n            시리즈를 선택하세요.\n          </h2>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport function Head() {\n  return <Seo title=\"글 시리즈 목록\" />;\n}\n\nexport default CategoryListPage;\n","import React from 'react';\n\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\nimport categoryNames from '../../code/categoryName';\nimport { useCategoryData } from '../../hooks/useCategoryData';\n\ntype CategoryListProps = {\n  selected?: string;\n};\n\ntype CategoryType = {\n  totalCount: number;\n  group: {\n    fieldValue: string;\n    totalCount: number;\n  }[];\n};\n\nfunction CategoryList({ selected }: CategoryListProps) {\n  const data: CategoryType = useCategoryData();\n  const categories = data.group;\n\n  return (\n    <div className=\"category-list-container\">\n      <div className=\"tag-list-header\">\n        <h1 className=\"category-list-title\">\n          <FontAwesomeIcon icon={faBook} className=\"title-icon\" />\n          시리즈로 검색\n        </h1>\n        <div className=\"total-count\">총 {categories.length}개의 시리즈</div>\n      </div>\n      <div className=\"category-grid\">\n        {categories.map((category: any) => (\n          <Link\n            key={category.fieldValue}\n            to={`/categories/${category.fieldValue}`}\n            className={`category-card ${selected === category.fieldValue ? 'active' : ''}`}\n          >\n            <div className=\"category-name\">\n              {categoryNames[category.fieldValue] || category.fieldValue}\n            </div>\n            <div className=\"category-count\">{category.totalCount}개의 글</div>\n          </Link>\n        ))}\n      </div>\n      <div className=\"category-list-divider\" />\n    </div>\n  );\n}\n\nexport default CategoryList;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useCategoryData = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        totalCount\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return data.allMdx;\n};\n","const categoryNames: Record<string, string> = {\n  blog: 'Gatsby 블로그',\n  'computer-science': 'CS 스터디',\n  'til-challenge': '멀티캠퍼스 TIL 챌린지',\n};\nexport default categoryNames;\n","import * as React from 'react';\n\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'gatsby';\n\ntype BreadcrumbProps = {\n  info: { name: string; url: string }[];\n};\n\nexport default function Breadcrumb({ info }: BreadcrumbProps) {\n  if (!info || info.length === 0) return null;\n\n  return (\n    <nav aria-label=\"breadcrumb\" className=\"breadcrumb\">\n      <ol className=\"breadcrumb-list\">\n        {info.map((item, idx) => {\n          const isLast = idx === info.length - 1;\n          return (\n            <li key={item.url || `${item.name}-${idx}`} className=\"breadcrumb-item\">\n              {isLast ? (\n                <span aria-current=\"page\" className=\"breadcrumb-current\">\n                  {item.name}\n                </span>\n              ) : (\n                <Link to={item.url} className=\"breadcrumb-link\">\n                  {item.name}\n                </Link>\n              )}\n              {!isLast && (\n                <span className=\"breadcrumb-sep\">\n                  <FontAwesomeIcon icon={faAngleRight} className=\"breadcrumb-sep-icon\" />\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n"],"names":["Head","React","Seo","title","_ref","pageContext","Layout","className","CategoryList","Breadcrumb","info","breadCrumbs","FontAwesomeIcon","icon","faBook","selected","categories","useStaticQuery","allMdx","group","length","map","category","Link","key","fieldValue","to","categoryNames","totalCount","blog","item","idx","isLast","url","name","faAngleRight"],"sourceRoot":""}